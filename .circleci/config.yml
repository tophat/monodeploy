version: 2.1

jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          paths:
            - node_modules
          key: yarn-packages-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: ~/repo
          paths: .
  lint:
      working_directory: ~/repo
      # Pick a Docker image here: https://circleci.com/docs/2.0/circleci-images/
      docker:
          - image: circleci/node:12
      steps:
          - checkout
          - restore_cache:
              name: Restore Yarn Package Cache
              keys:
                - yarn-packages-{{ checksum "yarn.lock" }}
          - run:
              name: Run Linting
              command: yarn lint
  test:
      working_directory: ~/repo
      docker:
          - image: circleci/node:12
      steps:
          - checkout
          - restore_cache:
              name: Restore Yarn Package Cache
              keys:
                - yarn-packages-{{ checksum "yarn.lock" }}
          - run:
              name: Set Global Git User
              command: |
                git config --global user.email "circleci-monodeploy@users.noreply.github.com"
                git config --global user.name "CircleCI monodeploy"
          - run:
              name: Run Tests
              command: yarn test --coverage
          - run:
              name: Upload Test Coverage
              command: bash <(curl -s https://codecov.io/bash)
              when: always
  publish:
    working_directory: ~/repo
    docker:
      - image: circleci/node:latest
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with NPM Registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish New Package Version through npm
          command: npm publish

workflows:
    version: 2
    build_to_production:
        jobs:
            - build:
                filters:
                  tags:
                    only: /^v.*/
            - lint:
                requires:
                  - build
                filters:
                  tags:
                    only: /^v.*/
            - test:
                requires:
                  - build
                filters:
                  tags:
                    only: /^v.*/
            - publish:
                requires:
                    - build
                    - lint
                    - test
                filters:
                  tags:
                    only: /^v.*/
                  branches:
                    ignore: /.*/
